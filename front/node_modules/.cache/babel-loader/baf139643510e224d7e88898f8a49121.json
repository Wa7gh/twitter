{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/twitter/front/src/App.js\";\nimport React, { Component } from 'react';\nimport Bar from './Component/bar';\nimport './App.css';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3100/auth/register').then(data => data.json()).then(res => this.setState({\n      data: res.data\n    }));\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, data.length <= 0 ? 'NO DB ENTRIES YET' : data.map(dat => React.createElement(\"li\", {\n      style: {\n        padding: '10px'\n      },\n      key: data.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" id: \"), \" \", dat.id, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" data: \"), dat.message))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/macbook/Desktop/twitter/front/src/App.js"],"names":["React","Component","Bar","App","state","data","id","message","intervalIsSet","idToDelete","idToUpdate","objectToUpdate","componentDidMount","fetch","then","json","res","setState","render","length","map","dat","padding","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,OAAO,WAAP;AAMA,OAAO,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAGjCG,KAHiC,GAGzB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,EAAE,EAAE,CAFE;AAGNC,MAAAA,OAAO,EAAE,IAHH;AAINC,MAAAA,aAAa,EAAE,KAJT;AAKNC,MAAAA,UAAU,EAAE,IALN;AAMNC,MAAAA,UAAU,EAAE,IANN;AAONC,MAAAA,cAAc,EAAE;AAPV,KAHyB;AAAA;;AAcjCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACOT,IAAD,IAAUA,IAAI,CAACU,IAAL,EADhB,EAECD,IAFD,CAEOE,GAAD,IAAS,KAAKC,QAAL,CAAc;AAAEZ,MAAAA,IAAI,EAAEW,GAAG,CAACX;AAAZ,KAAd,CAFf;AAGD;;AAGDa,EAAAA,MAAM,GAAG;AAAA,UAGCb,IAHD,GAGU,KAAKD,KAHf,CAGCC,IAHD;AAIP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACc,MAAL,IAAe,CAAf,GACG,mBADH,GAEGd,IAAI,CAACe,GAAL,CAAUC,GAAD,IACP;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAX;AAAgC,MAAA,GAAG,EAAEjB,IAAI,CAACE,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAAEgB,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,OACgDF,GAAG,CAACf,EADpD,OACwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxD,EAEE;AAAM,MAAA,KAAK,EAAE;AAAEiB,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGGF,GAAG,CAACd,OAHP,CADF,CAHN,CADA,CADF;AAeD;;AAxCgC;AA2CnC,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Bar from './Component/bar'\n\nimport './App.css';\n\n\n\n\n\nexport class App extends Component {\n\n\n  state = {\n    data: [],\n    id: 0,\n    message: null,\n    intervalIsSet: false,\n    idToDelete: null,\n    idToUpdate: null,\n    objectToUpdate: null,\n  };\n\n\n  componentDidMount() {\n    fetch('http://localhost:3100/auth/register')\n    .then((data) => data.json())\n    .then((res) => this.setState({ data: res.data }));\n  }\n\n  \n  render() {\n\n\n    const { data } = this.state;\n    return (\n      <div>\n      <ul>\n        {data.length <= 0\n          ? 'NO DB ENTRIES YET'\n          : data.map((dat) => (\n              <li style={{ padding: '10px' }} key={data.message}>\n                <span style={{ color: 'gray' }}> id: </span> {dat.id} <br />\n                <span style={{ color: 'gray' }}> data: </span>\n                {dat.message}\n              </li>\n            ))}\n      </ul>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}